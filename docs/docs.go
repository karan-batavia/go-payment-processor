// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/sesaquecruz/go-payment-processor",
        "contact": {
            "name": "Support",
            "url": "https://github.com/sesaquecruz/go-payment-processor"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/sesaquecruz/go-payment-processor"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/payments/process": {
            "post": {
                "description": "Process a payment transaction.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "Process a payment",
                "parameters": [
                    {
                        "description": "Transaction",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Transaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.HttpError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.Payment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.Transaction": {
            "type": "object",
            "required": [
                "acquirer_name",
                "card_token",
                "purchase_installments",
                "purchase_items",
                "purchase_value",
                "store_address",
                "store_cep",
                "store_identification"
            ],
            "properties": {
                "acquirer_name": {
                    "type": "string"
                },
                "card_token": {
                    "type": "string"
                },
                "purchase_installments": {
                    "type": "integer"
                },
                "purchase_items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "purchase_value": {
                    "type": "number"
                },
                "store_address": {
                    "type": "string"
                },
                "store_cep": {
                    "type": "string"
                },
                "store_identification": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Payment Processor",
	Description:      "A Rest API for Payment Processing.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
